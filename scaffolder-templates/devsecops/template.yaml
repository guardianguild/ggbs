apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-react-app-template
  title: Create SCA Scan Template
  description: Create a new SCA service scan
  tags:
    - sca
    - sast
spec:
  owner: web@example.com
  type: service
  parameters:
    - title: CI/CD Behaviour - Software Component Analysis
      required:
        - stage
        - docker
        - component_id
        - owner
      properties:
        stage:
          title: Stage
          type: string
          description: Gitlab CI/CD uses this list concept to create stages
          ui:field: EntityNamePicker
          ui:options:
            allowedStages:
              - build
              - test
              - release
              - integration
              - production
        docker:
          title: Docker
          type: string
          description: Binding a Docker Volume in CI/CD Pipeline
          ui:field: EntityNamePicker
          ui:options:
            allowedDocker:
              - hysnsec/safety
        component_id:
          title: Name
          type: string
          description: Binding a Docker Volume in CI/CD Pipeline
          ui:field: EntityNamePicker
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          stage: ${{ parameters.stage }}
          docker: ${{ parameters.docker }}
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
